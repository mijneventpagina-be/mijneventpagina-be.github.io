<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   version="1.0"
   width="1024.000000pt"
   height="1024.000000pt"
   viewBox="0 0 1024.000000 1024.000000"
   preserveAspectRatio="xMidYMid meet"
   id="svg57"
   sodipodi:docname="favicon.svg"
   xml:space="preserve"
   inkscape:version="1.3.2 (091e20ef0f, 2023-11-25, custom)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs57"><meshgradient
       inkscape:collect="always"
       id="meshgradient221"
       gradientUnits="userSpaceOnUse"
       x="113.96111"
       y="97.76252"
       gradientTransform="translate(8e-6)"><meshrow
         id="meshrow647"><meshpatch
           id="meshpatch647"><stop
             path="c 211.667,2.59267e-06  624.935,-0.153361  836.606,-0.153302"
             style="stop-color:#52f4ff;stop-opacity:1"
             id="stop647" /><stop
             path="c -3.32545e-05,211.667  -0.89455,624.493  -0.894066,836.16"
             style="stop-color:#f7af81;stop-opacity:1"
             id="stop648" /><stop
             path="c -211.667,0.00120547  -626.804,1.54471  -838.473,1.54347"
             style="stop-color:#b72b34;stop-opacity:1"
             id="stop649" /><stop
             path="c -0.00612933,-211.666  2.75598,-625.887  2.76134,-837.551"
             style="stop-color:#02215f;stop-opacity:1"
             id="stop650" /></meshpatch></meshrow></meshgradient><meshgradient
       inkscape:collect="always"
       id="meshgradient654"
       gradientUnits="userSpaceOnUse"
       x="113.784"
       y="96.924241"
       gradientTransform="translate(8e-6)"><meshrow
         id="meshrow654"><meshpatch
           id="meshpatch654"><stop
             path="c 211.07,2.59049e-06  623.172,-0.153232  834.245,-0.153173"
             style="stop-color:#52f4ff;stop-opacity:1"
             id="stop654" /><stop
             path="c -3.31607e-05,211.489  -0.892026,623.969  -0.891543,835.458"
             style="stop-color:#f7af81;stop-opacity:1"
             id="stop655" /><stop
             path="c -211.07,0.00120446  -625.035,1.54341  -836.107,1.54218"
             style="stop-color:#b72b34;stop-opacity:1"
             id="stop656" /><stop
             path="c -0.00611204,-211.488  2.7482,-625.362  2.75328,-836.847"
             style="stop-color:#02215f;stop-opacity:1"
             id="stop657" /></meshpatch></meshrow></meshgradient></defs><sodipodi:namedview
     id="namedview57"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="pt"
     inkscape:zoom="0.24608327"
     inkscape:cx="532.34013"
     inkscape:cy="991.53428"
     inkscape:window-width="1444"
     inkscape:window-height="1080"
     inkscape:window-x="2009"
     inkscape:window-y="0"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg57"
     showguides="true"><sodipodi:guide
       position="511.99998,1024"
       orientation="-1,0"
       id="guide1"
       inkscape:locked="false"
       inkscape:label=""
       inkscape:color="rgb(0,134,229)" /></sodipodi:namedview><rect
     style="display:none;fill:#0a1f1b;fill-opacity:1;stroke-width:0.999997;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
     id="rect657"
     width="1024"
     height="1024"
     x="0"
     y="2.8421709e-14"
     inkscape:label="solidbg" /><rect
     style="display:none;fill:url(#meshgradient221);fill-opacity:1;stroke:#e61111;stroke-width:1.31811;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
     id="rect67"
     width="836.99939"
     height="836.99939"
     x="94.159058"
     y="123.77159"
     rx="84.358994"
     inkscape:label="bgRect" /><path
     id="rect63"
     style="display:none;fill:url(#meshgradient654);fill-opacity:1;stroke:#e61111;stroke-width:1.31811;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
     inkscape:label="bg"
     d="m 178.51731,123.77107 c -46.73484,0 -84.357712,37.62479 -84.357712,84.35964 V 876.4121 c 0,46.73483 37.622872,84.35962 84.357712,84.35962 h 668.2814 c 46.73483,0 84.35964,-37.62479 84.35964,-84.35962 V 208.13071 c 0,-46.73485 -37.62481,-84.35964 -84.35964,-84.35964 h -39.8638 c -0.0384,20.41367 -0.0821,42.24696 -0.11389,44.79319 -0.26362,33.21615 -0.65796,39.14662 -2.76687,44.81442 -7.11779,19.24433 -24.12251,35.45875 -45.21219,43.10371 -10.67662,3.82252 -39.67502,4.8756 -51.93337,1.84395 -19.37607,-4.87701 -39.54257,-18.32063 -48.63745,-32.42433 -8.69953,-13.57646 -9.62265,-18.98124 -10.28164,-60.23786 -0.0328,-2.27472 -0.0579,-22.90468 -0.0869,-41.89308 H 390.03331 c -0.0839,14.98496 -0.1641,33.58861 -0.2626,33.58861 -0.65905,0 -0.92204,9.88537 -0.65842,21.8801 0.52724,24.64851 -1.31791,33.74405 -8.96288,45.87059 -8.69945,13.57646 -25.96644,26.36309 -43.10179,31.89915 -10.14938,3.29521 -36.24832,3.95304 -48.37486,1.31682 -27.94378,-6.32693 -50.87973,-26.62614 -56.67934,-50.35204 -1.31811,-5.40418 -2.10833,-19.11258 -2.63558,-44.02472 l -0.0985,-40.17851 z" /><g
     inkscape:groupmode="layer"
     id="layer1"
     inkscape:label="front"
     style="display:inline;fill:#589aaf;fill-opacity:1;stroke:none"
     transform="matrix(1.3181093,0,0,1.3181093,-185.31946,-127.35192)"><rect
       style="display:none;fill:#589aaf;fill-opacity:1;stroke:none;stroke-width:0.93329;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
       id="rect64"
       width="592.64069"
       height="592.64069"
       x="233.20953"
       y="211.69765"
       rx="59.730713"
       inkscape:label="completeRect" /><path
       id="rect62"
       style="display:inline;fill:#589aaf;fill-opacity:1;stroke:none;stroke-width:0.999997;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
       inkscape:label="bottom"
       d="m 518.6001,349.00049 c -181.03689,0 -255.29503,0.11889 -285.39112,0.59765 v 395.00977 c 0,33.09078 26.64116,59.73047 59.73194,59.73047 h 473.17822 c 27.38101,0 50.29609,-18.26067 57.40576,-43.30225 0.40182,-9.53861 0.54841,-28.17122 0.47461,-59.53564 L 823.5,349.99951 c -0.4,-0.7 -99.60032,-0.99902 -304.8999,-0.99902 z m -32.27637,22.48242 c 11.40456,0.17784 23.69507,0.89209 31.17627,2.01709 22.99988,3.4 41.70061,9.29967 62.50049,19.59961 14.59988,7.29994 23.49898,12.89986 34.39892,21.7998 9,7.2 24.00055,22.20094 31.00049,30.90088 l 5.6001,6.89942 8.79932,0.70019 c 16.49988,1.3 28.60123,4.3003 43.20117,10.8003 16.49988,7.39994 34.69928,23.09943 45.19922,38.79931 8.09748,12.06579 13.13206,25.27594 15.42041,38.86817 1.52373,7.29494 2.33494,14.85214 2.33496,22.59961 6.6e-4,48.77577 -31.76038,90.11049 -75.71924,104.51806 -3.04094,1.35882 -6.13236,2.65694 -9.33545,3.81445 -2.44906,1.41496 -3.50035,1.39967 -7.80029,10.59961 -27.29988,58.0997 -86.40032,99.80114 -153.3999,108.10108 -22.69988,2.8 -58.40022,1.89941 -77.6001,-2.10059 C 400.00034,780.69996 365.10031,762.09933 335.50049,732.49951 302.00067,699.19975 282.90023,662.99976 274.80029,618 c -0.8,-4.99999 -1.30078,-16.00055 -1.30078,-32.50049 0,-23.59982 0.20084,-25.79908 2.80078,-38.49902 9.29994,-43.89976 30.00028,-81.60018 62.6001,-114 18.69988,-18.69988 33.29924,-29.30041 56.09912,-40.80029 20.19988,-10.09994 45.50018,-17.50059 69,-20.10059 2.925,-0.325 6.90084,-0.5249 11.42578,-0.61084 3.39375,-0.0644 7.09691,-0.0649 10.89844,-0.006 z m 270.01318,26.2793 c 4.4625,-0.0125 7.71309,0.0377 8.66309,0.13769 4.7,0.5 7.99971,3.90082 8.69971,8.80078 0.5,3.5 0.10097,4.49893 -2.49903,7.39893 l -3,3.3999 -23.20019,0.30029 c -25.89992,0.3 -26.9001,0.10049 -29.6001,-6.49951 -1.2,-2.69996 -1.2999,-4.1998 -0.3999,-6.7998 1.9,-5.8 2.39904,-6.00098 25.39892,-6.50098 5.8,-0.15 11.47504,-0.2248 15.9375,-0.2373 z M 291,397.99951 h 23.79932 l 2.60009,3.10108 c 3.6,4.19993 3.50111,8.90016 -0.29882,13.10009 l -2.90039,3.29883 -21.39991,0.30029 c -13.09986,0.2 -22.70088,-0.10019 -24.90088,-0.70019 -7.19993,-2.1 -9.09921,-12.39919 -3.19921,-17.09912 2.39993,-1.9 3.89994,-2.00098 26.2998,-2.00098 z m 2.4375,342.30029 c 10.31244,0.05 20.0626,0.3002 21.1626,0.7002 2.99994,1.2 6.3999,6.59932 6.3999,10.29932 0,1.99994 -1.0999,4.00029 -3.3999,6.30029 l -3.3999,3.3999 h -22.00049 c -12.19994,0 -23.19918,-0.39902 -24.59912,-0.99902 -3.8,-1.4 -6.80069,-6.69996 -6.20069,-10.8999 0.6,-4.2 4.00006,-7.90127 7.5,-8.30127 3.35,-0.4 14.22516,-0.54952 24.5376,-0.49952 z m 453.26953,0 c 10.31247,0.05 20.0626,0.3002 21.1626,0.7002 3,1.2 6.3999,6.59932 6.3999,10.29932 0,1.99997 -1.0999,4.00029 -3.3999,6.30029 l -3.3999,3.3999 h -22.00049 c -12.19997,0 -23.19912,-0.39902 -24.59912,-0.99902 -3.8,-1.4 -6.80069,-6.69993 -6.20069,-10.8999 0.6,-4.2 4.00003,-7.90127 7.5,-8.30127 3.35,-0.4 14.22513,-0.54952 24.5376,-0.49952 z" /><path
       id="rect57"
       style="display:inline;fill:#589aaf;fill-opacity:1;stroke:none;stroke-width:0.999997;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
       d="m 373.08691,144.43799 c -5.63749,0.1875 -11.23623,1.5124 -15.88623,3.9624 -5.19999,2.7 -11.20059,9.29952 -14.10058,15.49951 L 340.5,169.5 l -0.30029,30.49951 c -0.2,16.79998 -0.0997,32.40069 0.30029,34.70069 1.4,9.79999 11.69962,13.8997 18.09961,7.1997 l 2.90039,-3 0.49951,-30.89941 0.50098,-30.79981 2.49902,-2.70117 c 5.6,-5.99999 11.8005,-6.7998 17.50049,-2.2998 5.09999,3.99999 5.50049,6.39993 5.50049,36.3999 0,30.49997 0.39961,32.9001 6.09961,35.6001 4.29999,2.09999 8.4,1.0996 12,-2.90039 l 3,-3.49952 -0.3003,-34.1997 -0.30029,-34.1001 -2.89892,-5.90039 c -3.7,-7.59999 -9.3004,-13.19932 -16.40039,-16.29932 -4.8,-2.09999 -10.47579,-3.0498 -16.11329,-2.8623 z"
       sodipodi:nodetypes="scccccccccccscccccccs"
       inkscape:label="clipL" /><path
       id="path57"
       style="display:inline;fill:#589aaf;fill-opacity:1;stroke:none;stroke-width:0.999997;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
       d="m 689.83459,144.43799 c -5.63749,0.1875 -11.23623,1.5124 -15.88623,3.9624 -5.19999,2.7 -11.20059,9.29952 -14.10058,15.49951 l -2.6001,5.6001 -0.30029,30.49951 c -0.2,16.79998 -0.0997,32.40069 0.30029,34.70069 1.4,9.79999 11.69962,13.8997 18.09961,7.1997 l 2.90039,-3 0.49951,-30.89941 0.50098,-30.79981 2.49902,-2.70117 c 5.6,-5.99999 11.8005,-6.7998 17.50049,-2.2998 5.09999,3.99999 5.50049,6.39993 5.50049,36.3999 0,30.49997 0.39961,32.9001 6.09961,35.6001 4.29999,2.09999 8.4,1.0996 12,-2.90039 l 3,-3.49952 -0.3003,-34.1997 -0.30029,-34.1001 -2.89892,-5.90039 c -3.7,-7.59999 -9.3004,-13.19932 -16.40039,-16.29932 -4.8,-2.09999 -10.47579,-3.0498 -16.11329,-2.8623 z"
       sodipodi:nodetypes="scccccccccccscccccccs"
       inkscape:label="clipR" /><path
       id="rect58"
       style="display:inline;fill:#589aaf;fill-opacity:1;stroke:none;stroke-width:0.999997;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
       inkscape:label="top"
       d="m 292.94092,211.69775 c -33.09078,0 -59.73194,26.63969 -59.73194,59.73047 v 47.57227 H 520.19971 C 724.39908,319.00047 823.9,318.7 823.5,318 l 2.34961,0.006 v -46.57764 c 0,-33.09078 -26.63969,-59.73047 -59.73047,-59.73047 H 752.9209 c -0.0772,4.15051 -0.1599,7.89918 -0.22119,12.80274 -0.2,25.19991 -0.49915,29.69905 -2.09912,33.99902 -5.4,14.59997 -18.30082,26.9012 -34.30079,32.70117 -8.09997,2.9 -30.09993,3.69893 -39.3999,1.39893 -14.69994,-3.7 -29.99944,-13.89915 -36.89941,-24.59912 -6.6,-10.29997 -7.30032,-14.40029 -7.80029,-45.7002 -0.0659,-4.56451 -0.11849,-7.39754 -0.17432,-10.60254 H 436.8208 C 436.69455,214.21081 436.52185,216 436.29932,216 c -0.5,0 -0.69952,7.49964 -0.49952,16.59961 0.4,18.69994 -0.99983,25.60032 -6.7998,34.80029 -6.59997,10.29997 -19.69974,20.00069 -32.69971,24.20069 -7.69997,2.49997 -27.50022,2.99902 -36.70019,0.99902 -21.19994,-4.8 -38.60052,-20.20023 -43.00049,-38.2002 -1,-4.09997 -1.59951,-14.49996 -1.99951,-33.3999 l -0.20362,-9.30176 z m 266.25879,44.30274 2.90039,2.89892 c 3.79998,3.9 3.90029,8.70051 0.30029,13.00049 l -2.6001,3.09961 H 535.5 c -22.89996,0 -24.39932,-0.0995 -26.79932,-1.99951 -5.39998,-4.2 -4.00019,-13.79932 2.29981,-16.29932 0.8,-0.3 11.99984,-0.60058 24.7998,-0.60058 z" /><path
       id="path60"
       style="fill:#589aaf;fill-opacity:1;stroke:none;stroke-width:1.01296;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
       d="m 478.7666,413.46094 c -3.86718,0.0641 -7.26611,0.23906 -9.76611,0.53906 -74.59993,9.19999 -134.70031,60.39958 -151.80029,129.49951 -10.19999,40.79996 -3.40008,85.50033 18.3999,121.80029 37.49996,62.29994 114.09968,93.50009 190.59961,77.6001 15.39998,-3.19999 26.70079,-7.19952 43.30078,-15.49951 13.49998,-6.69999 24.7257,-13.49269 30.49951,-19.70068 5.77381,-6.208 13.48661,-16.1612 15,-25.1001 l -6.09961,-2.69971 -7.70068,7.19971 c -12.39999,11.49999 -23.49972,19.19991 -35.69971,24.3999 -5.39999,2.3 -5.70068,2.2999 -3.20068,0.3999 3.24925,-2.41073 11.8869,-14.33755 12.99463,-15.79248 1.10772,-1.45491 7.90547,-11.50753 13.60546,-23.20752 3.7663,-7.9165 6.7018,-13.28803 8.00684,-16.45166 C 595.96351,655.12318 595.5,654.5997 591,649.19971 588.2,645.89971 583.60029,641.3 580.80029,639 l -5.10058,-4.00049 h -19.8003 -19.8999 v -7.79883 c 0,-4.39999 0.3002,-14.70098 0.7002,-23.00097 l 0.60058,-15.19922 h 4.8003 c 6.19999,0 8.4996,-2.80069 7.59961,-9.20069 -0.8,-5.69999 -2.7005,-7.30048 -8.50049,-7.00048 L 536.50049,573 536.2002,549.49951 535.8999,526.00049 h 4.5 c 3.7,0 4.80059,-0.50118 6.60059,-2.70117 4.69999,-6 -0.6006,-14.99951 -8.10059,-13.99952 l -3.70019,0.49952 -0.7002,-7.59961 c -0.4,-4.1 -1.8,-12.59981 -3,-18.79981 -3.99999,-19.29998 -7.9002,-30.09923 -15.70019,-43.69922 -2.8,-4.89999 -4.79961,-9.00068 -4.59961,-9.20068 0.2,-0.2 3.89981,1.2999 8.2998,3.3999 12.59999,6 24.99992,16.70012 39.3999,34.1001 3.4,4.1 7.8002,9.39971 9.7002,11.69971 1.9,2.39999 4.3002,4.2997 5.20019,4.1997 0.9,0 3.4001,-2.1 5.6001,-4.5 l 3.89942,-4.39892 -7.39893,-9.79981 c -4.1,-5.29999 -9.20088,-11.70058 -11.40088,-14.10058 l -3.99902,-4.5 3.99902,2.39941 c 2.2,1.3 9.40089,5.90118 15.90088,10.20117 13.19999,8.79999 12.70001,8.6997 19.5,2.69971 l 3.30029,-3.10107 -2.30127,-2.49903 C 595.79942,450.8003 582.2996,440.70058 573.09961,435.60059 555.89963,425.8006 537.29998,419.4 514.5,415.5 c -8.32499,-1.425 -24.13185,-2.23125 -35.7334,-2.03906 z M 487.1001,429 c 2.69988,0 13.20041,13.59983 18.30029,23.69971 5.69988,11.49988 10.19912,26.40053 12.59912,42.30029 0.6,4.1 1.30108,9.0008 1.60108,10.70068 l 0.49951,3.29883 H 487.99951 456 v -3.29883 c 0,-4.59988 2.50039,-20.10031 4.40039,-27.70019 5.3,-20.59976 11.59953,-33.5009 21.89941,-44.80078 2.2,-2.3 4.3003,-4.19971 4.8003,-4.19971 z m -22.87793,1.12939 c 1.49633,-0.18962 0.37822,1.5337 -2.32178,5.4712 -10.09987,14.69974 -18.50088,40.39938 -20.40088,62.09912 -0.4,3.69987 -0.8001,7.8 -1.1001,9 l -0.3999,2.2998 H 418.00049 396 l 2.10059,-5.79931 c 10.89987,-29.99961 33.90016,-57.70043 57.3999,-69.3003 4.81237,-2.31875 7.55786,-3.62302 8.72168,-3.77051 z m -50.52246,17.97071 c 0.7,-0.1 -0.8003,1.99961 -3.3003,4.59961 C 400.59955,462.89957 387.4,485.60028 382.5,501 c -1,3 -1.89951,5.59932 -1.99951,5.79932 -0.1,0.1 -3.20088,-0.79887 -6.90088,-2.19873 -6.09986,-2.3 -14.79916,-7.40098 -15.99902,-9.50098 -1,-1.6 17.09975,-20.60014 27.09961,-28.5 5.49986,-4.4 13.99941,-10.29971 18.89941,-13.19971 4.89986,-2.89986 9.5001,-5.2998 10.1001,-5.2998 z m -64.88672,61.08838 c 0.0333,-0.005 0.0614,-7.8e-4 0.0864,0.0117 0.3,0.2 3.80108,2.3999 7.60108,4.8999 3.89989,2.6 9.69913,5.79981 12.99902,7.1997 3.6,1.6 5.9001,3.10088 5.6001,3.90088 -2,7.5 -4.3002,21.69992 -5.2002,32.29981 -0.6,7.09989 -1.3,13.60019 -1.5,14.20019 -0.3,1 -5.09962,1.29932 -19.99951,1.29932 h -19.69922 l 0.69873,-7.80029 c 1.3,-16.09989 7.70021,-36.39973 16.1001,-51.49951 1.40625,-2.4375 2.8136,-4.43628 3.31348,-4.51172 z m 115.58642,16.51172 c 6.075,-0.025 14.40058,-4e-4 23.50049,0.0996 l 33.09961,0.3003 V 549.49951 573 H 487.5 454.00049 v -23.2998 c 0,-12.89991 0.1999,-23.60079 0.3999,-23.80079 0.1,-0.1 3.92411,-0.17421 9.99902,-0.19921 z m -59.7539,0.041 c 3.01709,-0.009 6.47998,0.009 10.35498,0.0586 l 24.29883,0.3003 -0.59912,17.20019 c -0.4,9.4999 -0.7002,19.99942 -0.7002,23.39942 v 6.20068 L 411.30029,573 l -26.60009,0.0996 0.59912,-11.79932 c 0.6,-9.6999 3.60058,-30.90029 5.10058,-34.80029 0.15,-0.45 5.19414,-0.73066 14.24561,-0.75879 z m -76.24512,63.25928 h 20.09912 20.10059 l 1.1997,14.20019 c 1,12.09994 3.60079,27.09903 5.80079,33.99903 0.4,1.3 -4.5e-4,1.80029 -1.40039,1.80029 -3,0 -17.20094,7.40049 -21.90088,11.50049 l -4.19971,3.59912 -5.49902,-11.29981 c -7.5,-15.49988 -11.70006,-30.09933 -13.5,-46.69921 z m 56.6001,0 h 26.79931 26.69971 L 438.60059,612 l 0.19921,22.99951 h -23.79931 -23.80078 l -2.09912,-8.79931 c -2.4,-10.29993 -4.1001,-23.4004 -4.1001,-31.4004 z m 69,0 H 487.5 520.99951 V 612 634.99951 H 487.5 454.00049 V 612 Z m -27.98731,61.98779 C 442.30181,650.98691 441,651.51254 441,660 c 0,5.99996 5.3001,31.29945 8.6001,41.39941 2.79996,8.4 6.90062,17.20043 11.10058,23.90039 1.3,2.1 2.19952,4.10079 1.99952,4.30079 -0.2,0.3 -3.00069,-0.70059 -6.20069,-2.10059 -12.19996,-5.39996 -26.50027,-18.30008 -39.70019,-36 C 410.19932,682.80004 396,656.20068 396,652.70068 396,651.20072 398.09949,651 417.89941,651 c 3.1,0 5.78685,-0.0115 8.11377,-0.0117 z M 487.59961,651 h 32.6001 l -0.7002,5.2002 c -3.89997,32.09988 -13.09986,55.30003 -27.7998,70.5 l -4.99951,5.09912 -3.09961,-3.09961 c -7.4,-7.4 -15.50052,-22.49994 -20.50049,-37.89991 -2.7,-8.39997 -8.10059,-34.09941 -8.10059,-38.39941 0,-1.2 5.00019,-1.40039 32.6001,-1.40039 z m 47.69971,0 h 23.40088 23.39941 l -0.59912,2.2002 c -0.3,1.29998 -3.30059,7.69982 -6.60059,14.2998 -15.29996,30.79994 -40.19994,55.69953 -61.8999,61.99951 -2.4,0.7 -2.3998,0.70029 -0.7998,-1.19971 2.69998,-2.99998 12.29962,-23.89933 15.0996,-32.79931 3.3,-10.59998 5.50088,-21.40012 6.90088,-34.1001 z m -156.19922,4.00049 c 1.2,0 2.30049,2.09971 4.00049,7.19971 1.19995,3.99995 4.49975,11.50029 7.1997,16.80029 4.7,9.19995 16.79917,27.2 20.09912,30 1,0.7 2.60127,2.69936 3.80127,4.29931 l 2.09912,3 -4.40039,-2.50048 c -2.39995,-1.4 -7.79897,-4.49981 -11.89892,-6.79981 -11.89995,-6.79995 -27.70025,-20.10029 -38.2002,-32.20019 l -5.20019,-6.09961 3.70019,-3.19922 c 2.1,-1.8 6.80005,-4.90088 10.5,-6.90088 3.7,-1.9 7.39981,-3.59912 8.29981,-3.59912 z"
       sodipodi:nodetypes="scccccscccccscccccccsccscccccsccccccsccccccccccccccccssccccccsccssccccccccscccccccscsccccccscccssccccccsssscccscccccscccccscccccccccccccsccccccccccsscccccssssccccscssccccccccccscccccccccccs"
       inkscape:label="globe" /><path
       id="path59"
       style="display:inline;fill:#589aaf;fill-opacity:1;stroke:none;stroke-width:1.0385;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:0.999584"
       d="m 655.96289,477.10107 a 87.366478,87.366478 0 0 0 -87.36621,87.36622 87.366478,87.366478 0 0 0 87.36621,87.36767 87.366478,87.366478 0 0 0 87.36621,-87.36767 87.366478,87.366478 0 0 0 -87.36621,-87.36622 z m -1.70508,16.60254 c 8.0623,-0.0191 18.96768,1.35879 24.74268,3.19629 21.59998,6.9 40.49961,27.30061 46.59961,50.10059 2.1,7.99999 2.39951,23.39903 0.49951,30.99902 -6.39999,25.89998 -29.29973,48.1001 -55.19971,53.6001 -16.89998,3.6 -36.49943,0.19999 -51.89941,-9 -11.99999,-7.19999 -20.40069,-16.19913 -27.20069,-29.09912 -5.29999,-10.19999 -7.1997,-18.10099 -7.1997,-30.50098 0,-18.99998 6.29943,-33.89962 20.39941,-48.09961 7.29999,-7.39999 9.90001,-9.29971 18,-13.1997 9.59999,-4.6 19.8005,-7.49991 28.00049,-7.89991 1.0125,-0.0625 2.10606,-0.0939 3.25781,-0.0967 z m 0.74268,23.1709 c -2.4,0 -4.80098,0.875 -6.50098,2.625 -2.4,2.3 -2.49902,3.00079 -2.49902,14.80078 v 12.39991 l -15,0.49951 c -13.89999,0.5 -15.20049,0.70078 -17.50049,2.80078 -3.2,3 -4.00058,7.0999 -2.10059,10.8999 2.6,4.9 4.60129,5.4002 20.30127,5.2002 l 14.29981,-0.20069 v 14.50049 14.39941 l 3.09961,2.6001 c 4.09999,3.5 8.79922,3.5 12.19922,0 2.59999,-2.5 2.70039,-3.0003 2.90039,-16.80029 L 664.5,566.50049 679.99951,566.2002 c 16.69999,-0.3 17.9003,-0.70001 19.80029,-6 1.4,-4.1 -0.4001,-9.0002 -4.10009,-11.2002 -2.8,-1.7 -5.10031,-1.99951 -16.8003,-1.99951 -16.09998,0 -14.89892,1.1992 -14.89892,-14.80078 0,-9.59999 -0.20049,-10.5002 -2.50049,-12.7002 -1.7,-1.75 -4.09951,-2.625 -6.49951,-2.625 z"
       inkscape:label="plus" /></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
